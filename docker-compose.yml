version: '3.8'

# Load environment variables from .env.production file
env_file:
  - .env.production

services:
  # FastAPI Backend Service
  backend:
    build:
      context: ./fastapi-backend
      dockerfile: Dockerfile
    container_name: shci-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES:-0,1}
      - TORCH_DEVICE=${TORCH_DEVICE:-cuda}
      - TTS_DEVICE=${TTS_DEVICE:-cuda}
      - WHISPER_DEVICE=${WHISPER_DEVICE:-cuda}
      - LLM_API_URL=${LLM_API_URL:-http://host.docker.internal:11434/v1/chat/completions}
      - LLM_MODEL=${LLM_MODEL:-qwen2.5-14b-gpu}
      - LLM_TIMEOUT=${LLM_TIMEOUT:-10.0}
      - LLM_RETRIES=${LLM_RETRIES:-1}
    volumes:
      - ./fastapi-backend:/app
      - ./Models:/app/Models
      - ./fastapi-backend/outputs:/app/outputs
      - ./fastapi-backend/memdb:/app/memdb
    restart: unless-stopped
    networks:
      - shci-network
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 2
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend Service
  frontend:
    build:
      context: ./web-app
      dockerfile: Dockerfile
    container_name: shci-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL:-https://nodecel.cloud}
      - NEXT_PUBLIC_WS_BASE_URL=${NEXT_PUBLIC_WS_BASE_URL:-wss://nodecel.cloud}
      - NEXT_PUBLIC_WS_PRODUCTION_URL=${NEXT_PUBLIC_WS_PRODUCTION_URL:-wss://nodecel.cloud}
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - shci-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: shci-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - shci-network

networks:
  shci-network:
    driver: bridge

volumes:
  models:
  outputs:
  memdb:
